<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我的恋爱日记10.30</title>
      <link href="/posts/97980273.html"/>
      <url>/posts/97980273.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="好棒哦明天就是周五-可以睡很久啦"><a href="#好棒哦明天就是周五-可以睡很久啦" class="headerlink" title="好棒哦明天就是周五 可以睡很久啦!!!"></a>好棒哦明天就是周五 可以睡很久啦!!!</h1><h3 id="今天过得还好-虽然说确实是发病了-感觉脑子里有点波在震荡www-我是不是中了毒电波-不是"><a href="#今天过得还好-虽然说确实是发病了-感觉脑子里有点波在震荡www-我是不是中了毒电波-不是" class="headerlink" title="今天过得还好 虽然说确实是发病了 感觉脑子里有点波在震荡www 我是不是中了毒电波(不是"></a>今天过得还好 虽然说确实是发病了 感觉脑子里有点波在震荡www 我是不是中了毒电波(不是</h3><p>其余的日常都很简短 但是今天脑子里一直有一个很强烈的想法</p><h1 id="就是超级想我的宝宝想死了想到快疯掉"><a href="#就是超级想我的宝宝想死了想到快疯掉" class="headerlink" title="就是超级想我的宝宝想死了想到快疯掉!!!!!"></a>就是超级想我的宝宝想死了想到快疯掉!!!!!</h1><h3 id="呜呜呜好像让我的宝宝身体好起来-超级想哦-每天都想-不想让他不好-能不能锁住他的喉咙-把他绑起来-这样他就不会走了-当然她本身也不会走-我就是怕嘛我就是好想我的宝宝能够快快好起来-不管怎么样好起来就好"><a href="#呜呜呜好像让我的宝宝身体好起来-超级想哦-每天都想-不想让他不好-能不能锁住他的喉咙-把他绑起来-这样他就不会走了-当然她本身也不会走-我就是怕嘛我就是好想我的宝宝能够快快好起来-不管怎么样好起来就好" class="headerlink" title="呜呜呜好像让我的宝宝身体好起来 超级想哦 每天都想 不想让他不好 能不能锁住他的喉咙 把他绑起来 这样他就不会走了 当然她本身也不会走 我就是怕嘛我就是好想我的宝宝能够快快好起来 不管怎么样好起来就好 !!!"></a>呜呜呜好像让我的宝宝身体好起来 超级想哦 每天都想 不想让他不好 能不能锁住他的喉咙 把他绑起来 这样他就不会走了 当然她本身也不会走 我就是怕嘛我就是好想我的宝宝能够快快好起来 不管怎么样好起来就好 !!!</h3><h1 id="呜呜呜宝宝快好起来qwq"><a href="#呜呜呜宝宝快好起来qwq" class="headerlink" title="呜呜呜宝宝快好起来qwq"></a>呜呜呜宝宝快好起来qwq</h1><h4 id="这篇日记好抽象-我就喜欢抽象的-正好作为开端-但是没办法-今天就是超级想超级想我的宝宝呜呜呜"><a href="#这篇日记好抽象-我就喜欢抽象的-正好作为开端-但是没办法-今天就是超级想超级想我的宝宝呜呜呜" class="headerlink" title="这篇日记好抽象 我就喜欢抽象的 正好作为开端 但是没办法 今天就是超级想超级想我的宝宝呜呜呜"></a>这篇日记好抽象 我就喜欢抽象的 正好作为开端 但是没办法 今天就是超级想超级想我的宝宝呜呜呜</h4><h1 id="希望我的宝宝好好的-我们一直好好的-我爱你-爱死你了-要把全世界送给你"><a href="#希望我的宝宝好好的-我们一直好好的-我爱你-爱死你了-要把全世界送给你" class="headerlink" title="希望我的宝宝好好的 我们一直好好的 我爱你 爱死你了 要把全世界送给你!!!"></a>希望我的宝宝好好的 我们一直好好的 我爱你 爱死你了 要把全世界送给你!!!</h1><h1 id="爱你哦"><a href="#爱你哦" class="headerlink" title="爱你哦"></a>爱你哦</h1><h1 id="（づ￣3￣）づ╭❤～Mua"><a href="#（づ￣3￣）づ╭❤～Mua" class="headerlink" title="（づ￣3￣）づ╭❤～Mua!!!"></a>（づ￣3￣）づ╭❤～Mua!!!</h1>]]></content>
      
      
      <categories>
          
          <category> 恋爱足迹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 星酱 </tag>
            
            <tag> 恋爱 </tag>
            
            <tag> 地雷 </tag>
            
            <tag> 极度爱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于素数的一系列解决办法</title>
      <link href="/posts/90a8f6e6.html"/>
      <url>/posts/90a8f6e6.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>gcd的一些用法</title>
      <link href="/posts/ac6b0799.html"/>
      <url>/posts/ac6b0799.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="最大公因数与最小公倍数"><a href="#最大公因数与最小公倍数" class="headerlink" title="最大公因数与最小公倍数"></a>最大公因数与最小公倍数</h1><h2 id="✅-什么是欧几里得算法（辗转相除法）？"><a href="#✅-什么是欧几里得算法（辗转相除法）？" class="headerlink" title="✅ 什么是欧几里得算法（辗转相除法）？"></a>✅ 什么是欧几里得算法（辗转相除法）？</h2><p>一句话：</p><blockquote><p>就是不断用“大数 ÷ 小数”，然后把“小数”与“余数”继续来除，直到余数变成 0，那个最后的除数就是最大公因数。</p></blockquote><hr><h2 id="✅-为什么这么做是对的？（傻瓜理解逻辑）"><a href="#✅-为什么这么做是对的？（傻瓜理解逻辑）" class="headerlink" title="✅ 为什么这么做是对的？（傻瓜理解逻辑）"></a>✅ 为什么这么做是对的？（傻瓜理解逻辑）</h2><p>假设你要找两个数的最大公因数，比如 18 和 12。</p><h3 id="你可能第一想法："><a href="#你可能第一想法：" class="headerlink" title="你可能第一想法："></a>你可能第一想法：</h3><p>“我把它们俩共同的因数列出来比较一下？”</p><p>18 的因数：1 2 3 6 9 18<br> 12 的因数：1 2 3 4 6 12<br> 共同的：1 2 3 6<br> 最大：6</p><p>对！结果是6。</p><p>但欧几里得算法的做法是：</p><hr><h2 id="✅-按步骤傻瓜化演示（以-18-和-12-为例）"><a href="#✅-按步骤傻瓜化演示（以-18-和-12-为例）" class="headerlink" title="✅ 按步骤傻瓜化演示（以 18 和 12 为例）"></a>✅ 按步骤傻瓜化演示（以 18 和 12 为例）</h2><div class="table-container"><table><thead><tr><th>步骤</th><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>18 ÷ 12 = 商 1 余 6</td><td>原来18和12的“共同因数”能帮我产生这个 6</td></tr><tr><td>2</td><td>接下来把“12”和“6”继续做除法</td><td>也就是 12 ÷ 6</td></tr><tr><td>3</td><td>12 ÷ 6 = 商 2 余 0</td><td>余数为0说明整除了</td></tr><tr><td>4</td><td>最后一次 <strong>被除数</strong> 就是最大公因数</td><td>6 就是最大公因数</td></tr></tbody></table></div><p>记住一句核心口诀：</p><blockquote><p><strong>大数 ÷ 小数 = 余数</strong><br> <strong>再用小数 ÷ 余数</strong><br> <strong>循环到余数是0为止</strong><br> <strong>最后的除数 = 最大公因数</strong></p></blockquote><hr><h2 id="✅-再举一个（稍微难一点）"><a href="#✅-再举一个（稍微难一点）" class="headerlink" title="✅ 再举一个（稍微难一点）"></a>✅ 再举一个（稍微难一点）</h2><p>求 144 和 60 的最大公因数：</p><div class="table-container"><table><thead><tr><th>步骤</th><th>计算</th><th>余数</th><th>继续</th></tr></thead><tbody><tr><td>1</td><td>144 ÷ 60</td><td>24</td><td>再用 60 ÷ 24</td></tr><tr><td>2</td><td>60 ÷ 24</td><td>12</td><td>再用 24 ÷ 12</td></tr><tr><td>3</td><td>24 ÷ 12</td><td>0</td><td>余数为0</td></tr><tr><td>结束</td><td>最大公因数 = 12</td><td></td></tr></tbody></table></div><p>所以 gcd(144, 60) = <strong>12</strong></p><hr><h2 id="✅-为什么“余数”还能继续当“测量尺”？"><a href="#✅-为什么“余数”还能继续当“测量尺”？" class="headerlink" title="✅ 为什么“余数”还能继续当“测量尺”？"></a>✅ 为什么“余数”还能继续当“测量尺”？</h2><p>可以这样理解：</p><p>你是在找一个能把两个数都整除的“最大尺子”。<br> 第一次除法把“大尺子测不准的部分”（多出来的）变成了“余数”，<br> 后面继续用“更精准的尺子”（余数）去替代原本的小的那个数。</p><p>不断“削小尺子”，直到它完全贴合。<br> 贴合时就是最大公因数。</p><hr><h2 id="✅-用一句最通俗的话总结"><a href="#✅-用一句最通俗的话总结" class="headerlink" title="✅ 用一句最通俗的话总结"></a>✅ 用一句最通俗的话总结</h2><blockquote><p><strong>不断用更小的尺子去量两个数，直到刚好不剩丁点，这个尺子就是最大公因数</strong></p><blockquote><p>[!NOTE]</p><p>公式:gcd(a, b) = gcd(b, a % b)</p></blockquote></blockquote><h1 id="最小公倍数求法"><a href="#最小公倍数求法" class="headerlink" title="最小公倍数求法"></a>最小公倍数求法</h1><h2 id="✅-但是列倍数太慢，所以有了一个超级快的公式"><a href="#✅-但是列倍数太慢，所以有了一个超级快的公式" class="headerlink" title="✅ 但是列倍数太慢，所以有了一个超级快的公式"></a>✅ 但是列倍数太慢，所以有了一个超级快的公式</h2><p>数学上有个结论（可靠且可以证明）：</p><blockquote><p><strong>两个数的乘积 = 最大公因数 × 最小公倍数</strong></p></blockquote><p>所以推出来：</p><blockquote><p><strong>最小公倍数 = (a × b) ÷ 最大公因数</strong></p></blockquote><p>这个公式就是最常用的方法。</p><hr><h1 id="✅-举个例子"><a href="#✅-举个例子" class="headerlink" title="✅ 举个例子"></a>✅ 举个例子</h1><p>求 12 和 18 的最小公倍数</p><ol><li>先求最大公因数<br> gcd(12, 18) = 6  （辗转相除法能算出来）</li><li>用公式<br> lcm = (12 × 18) ÷ 6<br> = 216 ÷ 6<br> = 36</li></ol><p>所以 <strong>最小公倍数 = 36</strong></p><hr><h1 id="✅-为什么乘积除以-gcd-就对了？（傻瓜解释）"><a href="#✅-为什么乘积除以-gcd-就对了？（傻瓜解释）" class="headerlink" title="✅ 为什么乘积除以 gcd 就对了？（傻瓜解释）"></a>✅ 为什么乘积除以 gcd 就对了？（傻瓜解释）</h1><p>因为：</p><div class="table-container"><table><thead><tr><th>项目</th><th>理解方式</th></tr></thead><tbody><tr><td>乘积</td><td>把两个数的所有因子都堆上去了（重复了一部分）</td></tr><tr><td>gcd</td><td>是那部分“重复”的公共身份</td></tr><tr><td>除 gcd</td><td>就把“重复部分”扣掉，只剩下最刚好的倍数</td></tr></tbody></table></div><hr><h1 id="✅-最通俗一句话"><a href="#✅-最通俗一句话" class="headerlink" title="✅ 最通俗一句话"></a>✅ 最通俗一句话</h1><blockquote><p><strong>最小公倍数就是：两个数的乘积，把重复分母（最大公因数）扣掉后的结果。</strong></p></blockquote><hr><p>如果你现在理解了原理，下一步我可以给你写最小公倍数的 C 语言代码，并且逐行教你怎么写、为什么这么写。</p><h1 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 题目绍介:</span></span><br><span class="line"><span class="comment">就是说输入两个数 然后生成最大公因数和最小公倍数罢了 很简单只是拿来当例子</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//快读</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fastRead</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//快写</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fastWrite</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">        x = -x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">9</span>)</span><br><span class="line">        fastWrite(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span> &#123;<span class="keyword">return</span> m%n==<span class="number">0</span>?n:gcd(n,m%n);&#125;<span class="comment">//这个就是那个最大公因数 用了递归</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lcm</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n,<span class="type">int</span> gcd)</span> &#123;<span class="keyword">return</span> (n*m)/gcd;&#125;<span class="comment">//最小公倍数的公式</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> m=fastRead(),n=fastRead();</span><br><span class="line">    <span class="type">int</span> res = gcd(m,n);</span><br><span class="line">    fastWrite(res);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    fastWrite(lcm(m,n,res));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法类 </tag>
            
            <tag> gcd </tag>
            
            <tag> 最大公因数 </tag>
            
            <tag> 最小公倍数 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/offline.html"/>
      <url>/offline.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!doctype html><html lang="zh-CN"><head>  <meta charset="utf-8">  <title>离线模式 | mymod233</title>  <meta name="viewport" content="width=device-width, initial-scale=1">  <meta name="theme-color" content="#1e1e2e">  <style>    :root { --bg:#1e1e2e; --fg:#e5e7eb; --muted:#9aa4b2; --accent1:#3b82f6; --accent2:#a855f7; }    html,body{height:100%}    body{      margin:0; background: radial-gradient(1200px 800px at 20% 10%, rgba(59,130,246,.15), transparent 60%),                 radial-gradient(1000px 700px at 80% 90%, rgba(168,85,247,.12), transparent 60%),                 var(--bg);      color:var(--fg); font:16px/1.6 system-ui,-apple-system,"Segoe UI",Roboto,Inter,"Helvetica Neue",Arial;      display:flex; align-items:center; justify-content:center; padding:24px;    }    .card{width:min(720px,90vw); background:rgba(255,255,255,.03); border:1px solid rgba(255,255,255,.06);      border-radius:20px; padding:28px 28px 22px; box-shadow:0 10px 30px rgba(0,0,0,.35); backdrop-filter: blur(6px);}    .logo{width:84px;height:84px;border-radius:24px;background:      linear-gradient(135deg, rgba(59,130,246,.9), rgba(168,85,247,.9));      display:flex;align-items:center;justify-content:center;margin-bottom:14px; box-shadow:0 8px 24px rgba(99,102,241,.35);}    .logo span{font-weight:800;font-size:52px;color:white;letter-spacing:.5px}    h1{margin:0 0 6px 0;font-size:26px;font-weight:800}    p{margin:6px 0;color:var(--muted)}    .actions{margin-top:18px;display:flex;gap:10px;flex-wrap:wrap}    .btn{appearance:none;border:none;border-radius:12px;padding:10px 14px;font-weight:700;cursor:pointer}    .primary{background:linear-gradient(135deg, #3b82f6, #a855f7); color:#fff}    .ghost{background:transparent; color:#cbd5e1; border:1px solid rgba(255,255,255,.15)}    .tips{margin-top:10px;font-size:13px;color:#b3bdc9}    code{background:rgba(255,255,255,.06);padding:2px 6px;border-radius:6px}  </style></head><body>  <main class="card" role="main" aria-label="离线提示">    <div class="logo"><span>M</span></div>    <h1>你现在处于离线状态</h1>    <p>网络连接不可用。已缓存的页面和静态资源仍可访问。恢复网络后会自动回到最新内容。</p>    <div class="actions">      <button class="btn primary" onclick="location.reload()">重试连接</button>      <button class="btn ghost" onclick="history.back()">返回上一页</button>    </div>    <p class="tips">提示：当你再次联网后，浏览器会自动更新缓存。如果仍旧显示旧内容，按 <code>Ctrl/Cmd + F5</code> 强刷。</p>  </main></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"mymod233","short_name":"mymod","start_url":"/","display":"standalone","background_color":"#1e1e2e","theme_color":"#1e1e2e","icons":[{"src":"/images/icons/icon-192x192.png","sizes":"192x192","type":"image/png"},{"src":"/images/icons/icon-512x512.png","sizes":"512x512","type":"image/png"}]}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p class='p center logo large'>个人介绍</p><p class='p center small'>A Wonderful Theme for Hexo</p><h2 id="大家好哦欢迎大家光临我的网站啦啦啦啦啦！！！-⁠-⁠≧⁠Д⁠≦⁠"><a href="#大家好哦欢迎大家光临我的网站啦啦啦啦啦！！！-⁠-⁠≧⁠Д⁠≦⁠" class="headerlink" title="大家好哦欢迎大家光临我的网站啦啦啦啦啦！！！(⁠ ⁠≧⁠Д⁠≦⁠)"></a>大家好哦欢迎大家光临我的网站啦啦啦啦啦！！！(⁠ ⁠≧⁠Д⁠≦⁠)</h2><p>本人也就只是懂<strong>一点点</strong>电脑技术罢了 并不是那种比较会的哦 什么<strong>GitHub</strong>那些也都是最近才弄的啦！(⁠╯⁠︵⁠╰⁠,⁠)</p><p>本人的<strong>兴趣爱好</strong>都比较多啦 最喜欢的就是<strong>听音乐</strong> (<psw>猜猜我喜欢听什么www</psw>)其次才是弄<strong>电脑</strong> 体育的话喜欢<strong>棒球</strong>和<strong>职业摔角</strong>(<del>这么小众的爱好应该没有人喜欢</del>) 但是最喜欢的运动还是<strong>职业摔角</strong>啦 当然最了解的也是职业摔角www（我可是5岁看摔角看到现在的呢！(⁠ ⁠；⁠∀⁠；⁠)）</p><p>我大学的专业是<strong>计算机科学与技术</strong> 因为我想<strong>逃避算法</strong>www(<emp>事实证明我是错的呜呜呜</emp>) 我初中就是打<strong>算法竞赛</strong>的 给我弄的长脑子了</p><p>我听音乐的话主要是我小时候<strong>学架子鼓</strong> 因此对音乐都是<strong>非常敏感</strong>的 小<strong>时候还被老师夸过说我很有天赋欸嘿嘿</strong>(<del>真的很自豪的说</del>) 所以说我<strong>听音乐也是很广泛</strong>的 中文的话比较喜欢<strong>中文说唱 主要是旋律说唱emo说唱二次元说唱之类的</strong> 因为听这些其实对于我来说<strong>像是找共鸣 因为他们的歌词很直白也很贴近生活嘛 正是因为门槛低所以我就很喜欢</strong> 日语的歌的话倒是流行的都听 因为日本那边的音乐都是挺好的嘛 <strong>至于欧美的话我就偏向于neo-soul啊R&amp;B之类</strong>(<del>又小众了起来嘤嘤</del>)的 我很喜欢爵士还有neo-soul 类似的风格 因为很独特很舒服 这一类的歌就不在意歌词了 如果是听中文说唱对于我来说那就是旋律+歌词和那种意识是我最喜欢的啦</p><p>说到这里推荐几位歌手啦!(<del>当然是中文说唱的www</del>)<br><div class="tag link"><a class="link-card" title="MISTERK" href="https://music.163.com/#/artist?id=12256230"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">MISTERK</p><p class="url">https://music.163.com/#/artist?id=12256230</p></div></a></div></p><h2 id="这位是真的非常非常喜欢啦-二次原说唱是最屌的"><a href="#这位是真的非常非常喜欢啦-二次原说唱是最屌的" class="headerlink" title="这位是真的非常非常喜欢啦 二次原说唱是最屌的!!!()"></a>这位是真的非常非常喜欢啦 二次原说唱是最屌的!!!(<del>不接受任何反驳</del>)</h2><div class="tag link"><a class="link-card" title="河南说唱之神" href="https://music.163.com/#/artist?id=15194340"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">河南说唱之神</p><p class="url">https://music.163.com/#/artist?id=15194340</p></div></a></div><h2 id="忧郁之神啦-母庸置疑的"><a href="#忧郁之神啦-母庸置疑的" class="headerlink" title="忧郁之神啦!!!母庸置疑的"></a>忧郁之神啦!!!母庸置疑的</h2><div class="tag link"><a class="link-card" title="BOBBYNOPACE" href="https://music.163.com/#/artist?id=48277407"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">BOBBYNOPACE</p><p class="url">https://music.163.com/#/artist?id=48277407</p></div></a></div><h2 id=""><a href="#" class="headerlink" title=""></a><del>永远的佐助</del></h2><h2 id="总而言之-最喜欢大家啦"><a href="#总而言之-最喜欢大家啦" class="headerlink" title="总而言之 最喜欢大家啦!!!"></a>总而言之 最喜欢大家啦!!!</h2>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/sw.js"/>
      <url>/sw.js</url>
      
        <content type="html"><![CDATA[/* sw.js — mymod233 进阶版 PWA   功能：静态资源 Cache First、页面 Network First、离线 fallback、更新提醒*/const CACHE_VERSION = 'v3';              // ← 每次改动SW时+1，强制让用户拿到新版本const RUNTIME_CACHE = `pwa-mymod-${CACHE_VERSION}`;const STATIC_PATTERN = /\.(?:js|css|png|jpg|jpeg|gif|svg|woff2?)$/i;const OFFLINE_URL = '/offline.html';// 安装：预缓存离线页（不要预缓存一大堆，Hexo 更新频繁）self.addEventListener('install', event => {  event.waitUntil(    caches.open(RUNTIME_CACHE).then(cache => cache.addAll([OFFLINE_URL])).then(() => self.skipWaiting())  );});// 激活：清理旧缓存，接管页面self.addEventListener('activate', event => {  event.waitUntil(    caches.keys().then(keys =>      Promise.all(keys.filter(k => k !== RUNTIME_CACHE).map(k => caches.delete(k)))    ).then(() => self.clients.claim())  );});// 获取：静态资源 Cache First，页面 Network First + 离线兜底self.addEventListener('fetch', event => {  const req = event.request;  if (req.method !== 'GET') return;  const url = new URL(req.url);  // 静态资源：缓存优先  if (STATIC_PATTERN.test(url.pathname)) {    event.respondWith(      caches.open(RUNTIME_CACHE).then(cache =>        cache.match(req).then(hit => {          const fromNet = fetch(req).then(res => {            if (res.ok) cache.put(req, res.clone());            return res;          }).catch(() => hit);          return hit || fromNet;        })      )    );    return;  }  // 页面：网络优先，失败用缓存，再失败给离线页  if (req.mode === 'navigate' || (req.headers.get('accept') || '').includes('text/html')) {    event.respondWith(      fetch(req).then(res => {        const clone = res.clone();        caches.open(RUNTIME_CACHE).then(c => c.put(req, clone));        return res;      }).catch(async () => {        const cached = await caches.match(req);        return cached || caches.match(OFFLINE_URL);      })    );    return;  }  // 其他 GET：尽量走网络，失败尝试缓存  event.respondWith(    fetch(req).catch(() => caches.match(req))  );});// 接收页面消息：允许页面请求立即激活新SWself.addEventListener('message', event => {  if (!event.data) return;  if (event.data === 'SKIP_WAITING') {    self.skipWaiting();  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/force-dark-pages.js"/>
      <url>/js/force-dark-pages.js</url>
      
        <content type="html"><![CDATA[;(function () {  // 需要强制暗色的路径规则，自行补充  var forceDark = /^\/(page|about|links|music)(\/|$)/i.test(location.pathname);  if (!forceDark) return;  // 1) 立刻设为 dark  try { localStorage.setItem('theme', 'dark'); } catch (e) {}  var html = document.documentElement;  html.setAttribute('data-theme', 'dark');  html.classList.add('force-dark-page');  // 2) 隐藏可能存在的主题切换按钮（多写几种常见选择器以防主题版本差异）  var hideSwitch = function () {    var selectors = [      '#toggle-mode', '.toggle-mode', '.toggle-theme', '.darkmode-switch',      '.mode', '.site-nav .mode', '.navbar .mode'    ];    selectors.forEach(function (sel) {      document.querySelectorAll(sel).forEach(function (el) {        el.style.setProperty('display', 'none', 'important');        el.setAttribute('aria-hidden', 'true');      });    });  };  hideSwitch();  // 3) 监听 data-theme，防止被外部脚本改回 light  var obs = new MutationObserver(function (muts) {    if (html.getAttribute('data-theme') !== 'dark') {      html.setAttribute('data-theme', 'dark');    }    hideSwitch();  });  obs.observe(html, { attributes: true, attributeFilter: ['data-theme'] });  // 4) 某些主题用 prefers-color-scheme，直接硬顶一层样式变量  var css = document.createElement('style');  css.textContent =    'html.force-dark-page{color-scheme: dark !important;}';  document.head.appendChild(css);})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 一张全站壁纸：滚动也不换场景 */html,body{height:100%}body{  background-image:url('/images/icons/wall.jpg');  background-size:cover;  background-position:center center;  background-repeat:no-repeat;  background-attachment:fixed;}/* 封面就是“文字层”：把封面自己的底图和大遮罩关掉 */.cover, .cover .cover-img, .cover .bg{  background:transparent !important;  background-image:none !important;}.cover .mask, .cover .cover-mask{  background: rgba(0,0,0,0.15) !important; /* 想更通透就再小点或直接透明 */}/* 封面高度铺满一屏，像你给的样例一样 */.cover{height:100vh !important}/* 下面整块布局别再铺白底，全部透下去 */#page, #body-wrap, .layout, .main-inner, #content-inner, #recent-posts, .aside-content{  background:transparent !important;}/* 卡片半透明 + 轻磨砂，保证读得清 */.card, .card-widget, .recent-posts .recent-post-item, .post-block, .post-content,.timeline, .category-list, .tag-cloud, .pagination .page-number, .pagination .extend{  background: rgba(255,255,255,0.82) !important;  backdrop-filter: blur(10px) saturate(180%);  -webkit-backdrop-filter: blur(10px) saturate(180%);}/* 夜间模式下的卡片透明度 */[data-theme="dark"] .card, [data-theme="dark"] .card-widget,[data-theme="dark"] .recent-posts .recent-post-item, [data-theme="dark"] .post-block,[data-theme="dark"] .post-content, [data-theme="dark"] .timeline,[data-theme="dark"] .category-list, [data-theme="dark"] .tag-cloud,[data-theme="dark"] .pagination .page-number, [data-theme="dark"] .pagination .extend{  background: rgba(0,0,0,0.42) !important;}/* 顶栏也做成悬浮透明（需要的话） */#nav{background:transparent !important; box-shadow:none !important}#nav .menus_items .menus_item:hover{background:rgba(0,0,0,0.08)}[data-theme="dark"] #nav .menus_items .menus_item:hover{background:rgba(255,255,255,0.08)}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!DOCTYPE html><html><head>  <meta charset="utf-8">  <title>Music</title>  <meta name="viewport" content="width=device-width, initial-scale=1" />  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">  <script src="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"></script>  <script src="https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js"></script>  <style>    body { margin: 0; padding: 2rem; font-family: system-ui, sans-serif; }    .wrap { max-width: 960px; margin: 0 auto; }  </style></head><body>  <div class="wrap">    <h1>My Playlist</h1>    <!-- 页内可见列表播放器 -->    <meting-js      server="netease"      type="playlist"      id="14437180364"      fixed="false"      autoplay="false"      order="random"      loop="all"      list-folded="false"      list-max-height="420"      preload="auto">    </meting-js>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>message</title>
      <link href="/message/index.html"/>
      <url>/message/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
  
</search>
