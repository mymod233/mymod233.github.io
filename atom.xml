<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>mymod的博客</title>
  
  <subtitle>欢迎哦不要走嘛呜呜</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-10-30T12:01:26.429Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>mymod</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我的恋爱日记10.30</title>
    <link href="http://example.com/posts/97980273.html"/>
    <id>http://example.com/posts/97980273.html</id>
    <published>2025-10-30T12:00:35.000Z</published>
    <updated>2025-10-30T12:01:26.429Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="好棒哦明天就是周五-可以睡很久啦"><a href="#好棒哦明天就是周五-可以睡很久啦" class="headerlink" title="好棒哦明天就是周五 可以睡很久啦!!!"></a>好棒哦明天就是周五 可以睡很久啦!!!</h1><h3 id="今天过得还好-虽然说确实是发病了-感觉脑子里有点波在震荡www-我是不是中了毒电波-不是"><a href="#今天过得还好-虽然说确实是发病了-感觉脑子里有点波在震荡www-我是不是中了毒电波-不是" class="headerlink" title="今天过得还好 虽然说确实是发病了 感觉脑子里有点波在震荡www 我是不是中了毒电波(不是"></a>今天过得还好 虽然说确实是发病了 感觉脑子里有点波在震荡www 我是不是中了毒电波(不是</h3><p>其余的日常都很简短 但是今天脑子里一直有一个很强烈的想法</p><h1 id="就是超级想我的宝宝想死了想到快疯掉"><a href="#就是超级想我的宝宝想死了想到快疯掉" class="headerlink" title="就是超级想我的宝宝想死了想到快疯掉!!!!!"></a>就是超级想我的宝宝想死了想到快疯掉!!!!!</h1><h3 id="呜呜呜好像让我的宝宝身体好起来-超级想哦-每天都想-不想让他不好-能不能锁住他的喉咙-把他绑起来-这样他就不会走了-当然她本身也不会走-我就是怕嘛我就是好想我的宝宝能够快快好起来-不管怎么样好起来就好"><a href="#呜呜呜好像让我的宝宝身体好起来-超级想哦-每天都想-不想让他不好-能不能锁住他的喉咙-把他绑起来-这样他就不会走了-当然她本身也不会走-我就是怕嘛我就是好想我的宝宝能够快快好起来-不管怎么样好起来就好" class="headerlink" title="呜呜呜好像让我的宝宝身体好起来 超级想哦 每天都想 不想让他不好 能不能锁住他的喉咙 把他绑起来 这样他就不会走了 当然她本身也不会走 我就是怕嘛我就是好想我的宝宝能够快快好起来 不管怎么样好起来就好 !!!"></a>呜呜呜好像让我的宝宝身体好起来 超级想哦 每天都想 不想让他不好 能不能锁住他的喉咙 把他绑起来 这样他就不会走了 当然她本身也不会走 我就是怕嘛我就是好想我的宝宝能够快快好起来 不管怎么样好起来就好 !!!</h3><h1 id="呜呜呜宝宝快好起来qwq"><a href="#呜呜呜宝宝快好起来qwq" class="headerlink" title="呜呜呜宝宝快好起来qwq"></a>呜呜呜宝宝快好起来qwq</h1><h4 id="这篇日记好抽象-我就喜欢抽象的-正好作为开端-但是没办法-今天就是超级想超级想我的宝宝呜呜呜"><a href="#这篇日记好抽象-我就喜欢抽象的-正好作为开端-但是没办法-今天就是超级想超级想我的宝宝呜呜呜" class="headerlink" title="这篇日记好抽象 我就喜欢抽象的 正好作为开端 但是没办法 今天就是超级想超级想我的宝宝呜呜呜"></a>这篇日记好抽象 我就喜欢抽象的 正好作为开端 但是没办法 今天就是超级想超级想我的宝宝呜呜呜</h4><h1 id="希望我的宝宝好好的-我们一直好好的-我爱你-爱死你了-要把全世界送给你"><a href="#希望我的宝宝好好的-我们一直好好的-我爱你-爱死你了-要把全世界送给你" class="headerlink" title="希望我的宝宝好好的 我们一直好好的 我爱你 爱死你了 要把全世界送给你!!!"></a>希望我的宝宝好好的 我们一直好好的 我爱你 爱死你了 要把全世界送给你!!!</h1><h1 id="爱你哦"><a href="#爱你哦" class="headerlink" title="爱你哦"></a>爱你哦</h1><h1 id="（づ￣3￣）づ╭❤～Mua"><a href="#（づ￣3￣）づ╭❤～Mua" class="headerlink" title="（づ￣3￣）づ╭❤～Mua!!!"></a>（づ￣3￣）づ╭❤～Mua!!!</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="恋爱足迹" scheme="http://example.com/categories/%E6%81%8B%E7%88%B1%E8%B6%B3%E8%BF%B9/"/>
    
    
    <category term="星酱" scheme="http://example.com/tags/%E6%98%9F%E9%85%B1/"/>
    
    <category term="恋爱" scheme="http://example.com/tags/%E6%81%8B%E7%88%B1/"/>
    
    <category term="地雷" scheme="http://example.com/tags/%E5%9C%B0%E9%9B%B7/"/>
    
    <category term="极度爱" scheme="http://example.com/tags/%E6%9E%81%E5%BA%A6%E7%88%B1/"/>
    
  </entry>
  
  <entry>
    <title>关于素数的一系列解决办法</title>
    <link href="http://example.com/posts/90a8f6e6.html"/>
    <id>http://example.com/posts/90a8f6e6.html</id>
    <published>2025-10-30T11:32:53.000Z</published>
    <updated>2025-10-30T11:40:48.656Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>gcd的一些用法</title>
    <link href="http://example.com/posts/ac6b0799.html"/>
    <id>http://example.com/posts/ac6b0799.html</id>
    <published>2025-10-30T11:19:30.000Z</published>
    <updated>2025-10-30T11:39:36.015Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="最大公因数与最小公倍数"><a href="#最大公因数与最小公倍数" class="headerlink" title="最大公因数与最小公倍数"></a>最大公因数与最小公倍数</h1><h2 id="✅-什么是欧几里得算法（辗转相除法）？"><a href="#✅-什么是欧几里得算法（辗转相除法）？" class="headerlink" title="✅ 什么是欧几里得算法（辗转相除法）？"></a>✅ 什么是欧几里得算法（辗转相除法）？</h2><p>一句话：</p><blockquote><p>就是不断用“大数 ÷ 小数”，然后把“小数”与“余数”继续来除，直到余数变成 0，那个最后的除数就是最大公因数。</p></blockquote><hr><h2 id="✅-为什么这么做是对的？（傻瓜理解逻辑）"><a href="#✅-为什么这么做是对的？（傻瓜理解逻辑）" class="headerlink" title="✅ 为什么这么做是对的？（傻瓜理解逻辑）"></a>✅ 为什么这么做是对的？（傻瓜理解逻辑）</h2><p>假设你要找两个数的最大公因数，比如 18 和 12。</p><h3 id="你可能第一想法："><a href="#你可能第一想法：" class="headerlink" title="你可能第一想法："></a>你可能第一想法：</h3><p>“我把它们俩共同的因数列出来比较一下？”</p><p>18 的因数：1 2 3 6 9 18<br> 12 的因数：1 2 3 4 6 12<br> 共同的：1 2 3 6<br> 最大：6</p><p>对！结果是6。</p><p>但欧几里得算法的做法是：</p><hr><h2 id="✅-按步骤傻瓜化演示（以-18-和-12-为例）"><a href="#✅-按步骤傻瓜化演示（以-18-和-12-为例）" class="headerlink" title="✅ 按步骤傻瓜化演示（以 18 和 12 为例）"></a>✅ 按步骤傻瓜化演示（以 18 和 12 为例）</h2><div class="table-container"><table><thead><tr><th>步骤</th><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>18 ÷ 12 = 商 1 余 6</td><td>原来18和12的“共同因数”能帮我产生这个 6</td></tr><tr><td>2</td><td>接下来把“12”和“6”继续做除法</td><td>也就是 12 ÷ 6</td></tr><tr><td>3</td><td>12 ÷ 6 = 商 2 余 0</td><td>余数为0说明整除了</td></tr><tr><td>4</td><td>最后一次 <strong>被除数</strong> 就是最大公因数</td><td>6 就是最大公因数</td></tr></tbody></table></div><p>记住一句核心口诀：</p><blockquote><p><strong>大数 ÷ 小数 = 余数</strong><br> <strong>再用小数 ÷ 余数</strong><br> <strong>循环到余数是0为止</strong><br> <strong>最后的除数 = 最大公因数</strong></p></blockquote><hr><h2 id="✅-再举一个（稍微难一点）"><a href="#✅-再举一个（稍微难一点）" class="headerlink" title="✅ 再举一个（稍微难一点）"></a>✅ 再举一个（稍微难一点）</h2><p>求 144 和 60 的最大公因数：</p><div class="table-container"><table><thead><tr><th>步骤</th><th>计算</th><th>余数</th><th>继续</th></tr></thead><tbody><tr><td>1</td><td>144 ÷ 60</td><td>24</td><td>再用 60 ÷ 24</td></tr><tr><td>2</td><td>60 ÷ 24</td><td>12</td><td>再用 24 ÷ 12</td></tr><tr><td>3</td><td>24 ÷ 12</td><td>0</td><td>余数为0</td></tr><tr><td>结束</td><td>最大公因数 = 12</td><td></td></tr></tbody></table></div><p>所以 gcd(144, 60) = <strong>12</strong></p><hr><h2 id="✅-为什么“余数”还能继续当“测量尺”？"><a href="#✅-为什么“余数”还能继续当“测量尺”？" class="headerlink" title="✅ 为什么“余数”还能继续当“测量尺”？"></a>✅ 为什么“余数”还能继续当“测量尺”？</h2><p>可以这样理解：</p><p>你是在找一个能把两个数都整除的“最大尺子”。<br> 第一次除法把“大尺子测不准的部分”（多出来的）变成了“余数”，<br> 后面继续用“更精准的尺子”（余数）去替代原本的小的那个数。</p><p>不断“削小尺子”，直到它完全贴合。<br> 贴合时就是最大公因数。</p><hr><h2 id="✅-用一句最通俗的话总结"><a href="#✅-用一句最通俗的话总结" class="headerlink" title="✅ 用一句最通俗的话总结"></a>✅ 用一句最通俗的话总结</h2><blockquote><p><strong>不断用更小的尺子去量两个数，直到刚好不剩丁点，这个尺子就是最大公因数</strong></p><blockquote><p>[!NOTE]</p><p>公式:gcd(a, b) = gcd(b, a % b)</p></blockquote></blockquote><h1 id="最小公倍数求法"><a href="#最小公倍数求法" class="headerlink" title="最小公倍数求法"></a>最小公倍数求法</h1><h2 id="✅-但是列倍数太慢，所以有了一个超级快的公式"><a href="#✅-但是列倍数太慢，所以有了一个超级快的公式" class="headerlink" title="✅ 但是列倍数太慢，所以有了一个超级快的公式"></a>✅ 但是列倍数太慢，所以有了一个超级快的公式</h2><p>数学上有个结论（可靠且可以证明）：</p><blockquote><p><strong>两个数的乘积 = 最大公因数 × 最小公倍数</strong></p></blockquote><p>所以推出来：</p><blockquote><p><strong>最小公倍数 = (a × b) ÷ 最大公因数</strong></p></blockquote><p>这个公式就是最常用的方法。</p><hr><h1 id="✅-举个例子"><a href="#✅-举个例子" class="headerlink" title="✅ 举个例子"></a>✅ 举个例子</h1><p>求 12 和 18 的最小公倍数</p><ol><li>先求最大公因数<br> gcd(12, 18) = 6  （辗转相除法能算出来）</li><li>用公式<br> lcm = (12 × 18) ÷ 6<br> = 216 ÷ 6<br> = 36</li></ol><p>所以 <strong>最小公倍数 = 36</strong></p><hr><h1 id="✅-为什么乘积除以-gcd-就对了？（傻瓜解释）"><a href="#✅-为什么乘积除以-gcd-就对了？（傻瓜解释）" class="headerlink" title="✅ 为什么乘积除以 gcd 就对了？（傻瓜解释）"></a>✅ 为什么乘积除以 gcd 就对了？（傻瓜解释）</h1><p>因为：</p><div class="table-container"><table><thead><tr><th>项目</th><th>理解方式</th></tr></thead><tbody><tr><td>乘积</td><td>把两个数的所有因子都堆上去了（重复了一部分）</td></tr><tr><td>gcd</td><td>是那部分“重复”的公共身份</td></tr><tr><td>除 gcd</td><td>就把“重复部分”扣掉，只剩下最刚好的倍数</td></tr></tbody></table></div><hr><h1 id="✅-最通俗一句话"><a href="#✅-最通俗一句话" class="headerlink" title="✅ 最通俗一句话"></a>✅ 最通俗一句话</h1><blockquote><p><strong>最小公倍数就是：两个数的乘积，把重复分母（最大公因数）扣掉后的结果。</strong></p></blockquote><hr><p>如果你现在理解了原理，下一步我可以给你写最小公倍数的 C 语言代码，并且逐行教你怎么写、为什么这么写。</p><h1 id="代码演示"><a href="#代码演示" class="headerlink" title="代码演示"></a>代码演示</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 题目绍介:</span></span><br><span class="line"><span class="comment">就是说输入两个数 然后生成最大公因数和最小公倍数罢了 很简单只是拿来当例子</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//快读</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fastRead</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>) f = <span class="number">-1</span>;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + (ch - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x * f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//快写</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">fastWrite</span><span class="params">(<span class="type">int</span> x)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">        x = -x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">9</span>)</span><br><span class="line">        fastWrite(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span> &#123;<span class="keyword">return</span> m%n==<span class="number">0</span>?n:gcd(n,m%n);&#125;<span class="comment">//这个就是那个最大公因数 用了递归</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">lcm</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n,<span class="type">int</span> gcd)</span> &#123;<span class="keyword">return</span> (n*m)/gcd;&#125;<span class="comment">//最小公倍数的公式</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> m=fastRead(),n=fastRead();</span><br><span class="line">    <span class="type">int</span> res = gcd(m,n);</span><br><span class="line">    fastWrite(res);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    fastWrite(lcm(m,n,res));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="技术" scheme="http://example.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
    <category term="算法类" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95%E7%B1%BB/"/>
    
    <category term="gcd" scheme="http://example.com/tags/gcd/"/>
    
    <category term="最大公因数" scheme="http://example.com/tags/%E6%9C%80%E5%A4%A7%E5%85%AC%E5%9B%A0%E6%95%B0/"/>
    
    <category term="最小公倍数" scheme="http://example.com/tags/%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0/"/>
    
  </entry>
  
</feed>
